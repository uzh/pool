name: CI
on:
  push:

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      EMAIL_RATE_LIMIT: 3600
      MATCHER_MAX_CAPACITY: 80
      MYSQL_DATABASE: test_econ
      MYSQL_ROOT_PASSWORD: password
    services:
      database-root:
        image: mariadb:10.6
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        ports: ["3306:3306"]
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      database-tenant:
        image: mariadb:10.6
        env:
          MYSQL_DATABASE: ${{ env.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ env.MYSQL_ROOT_PASSWORD }}
        ports: ["3307:3306"]
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and test with Docker
        uses: addnab/docker-run-action@v3
        env:
          DATABASE_URL_TENANT_TEST: mariadb://root:${{ env.MYSQL_ROOT_PASSWORD }}@database-tenant:${{ job.services.database-tenant.ports[3306] }}/${{ env.MYSQL_DATABASE }}
          DATABASE_URL: mariadb://root:${{ env.MYSQL_ROOT_PASSWORD }}@database-root:${{ job.services.database-root.ports[3306] }}/${{ env.MYSQL_DATABASE }}
          SIHL_ENV: test
          SMTP_SENDER: test@econ.uzh.ch
          TEST_EMAIL: test@econ.uzh.ch
        with:
          image: ocaml/opam:debian-10-ocaml-4.12
          options: -v ${{ github.workspace }}:/app -w /app -e DATABASE_URL -e DATABASE_URL_TENANT_TEST -e TEST_EMAIL -e SMTP_SENDER -e SIHL_ENV
          run: |
            ping -c 4 database-root
            ping -c 4 database-tenant

            ls -la .
            env

            # Reclaim required directory permissions
            sudo chown -R opam .

            # Build and test executable
            /app/scripts/build.sh

            # Restore directory permissions to avoid conflicts
            sudo chown -R 1001:123 .

      - name: Restore directory permissions to avoid conflicts
        if: always()
        run: |
          ls -la .
          whoami
          chown -R 1001:123 .

      - uses: actions/upload-artifact@v3
        with:
          name: run.exe
          path: _build/default/pool/run/run.exe

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: tests
          path: _build/default/pool/test/

      - name: Notify about failure
        if: failure()
        run: |
          pwd
          cat << EOF > message.json
          {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Pipeline failed!","themeColor":"ff0000","title":"$GITHUB_REPOSITORY pipeline failed ðŸ’¢!","sections":[{"facts":[{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Branch:","value":"$GITHUB_REF_NAME"},{"name":"Commit:","value":"$GITHUB_SHA"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
          EOF
          
          ls -la
          curl -X POST ${{ secrets.ECON_TEAMS_WEBHOOK }} --header 'Content-Type: application/json' -d @message.json

