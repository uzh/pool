@use "sass:color";
$font-path: "../node_modules/@econ/frontend-framework/dist/font";
@import "../node_modules/@econ/frontend-framework/dist/main.scss";
@import "./admin/calendar";

$green-lighter: color.adjust($green, $lightness: $color-shades-ratio * 3);
$red-lighter: color.adjust($red, $lightness: $color-shades-ratio * 3);

$green-light: color.adjust($green, $lightness: $color-shades-ratio * 2);
$red-light: color.adjust($red, $lightness: $color-shades-ratio * 2);

// Index page
.index-page>*:nth-child(2) {
    flex-basis: 25%;
    flex-shrink: 0;
}

@include mobile {
    .index-page {
        flex-direction: column;
    }
}

// Mailings toggle
.toggled {
    display: flex;
}

.toggle-address:checked~.toggled {
    display: none;
}

// Filter
.switcher-sm>* {
    flex-basis: calc((24rem - 100%)*999);
}

#filter-form {

    label,
    input,
    select {
        font-size: $small-font-size;
    }

    .key-select {
        flex-basis: calc(calc(100% - (2 * $space-base)) / 3);
    }

    .border {
        border-color: #d7d7d7;
    }

    .predicate {
        background-color: rgba(0, 0, 0, 0.02);
        position: relative;

        &[data-predicate="and"],
        &[data-predicate="or"] {
            &>.predicate-inner>.predicate-wrapper {
                padding-left: $space-sm;
                border-left: 2px solid $grey-border;
            }
        }
    }

    [data-delete-predicate] {
        color: $red;
        cursor: pointer;
    }

    [data-new-predicate] button {
        padding: $space-xs $space-sm;
    }
}

@supports (display: grid) {
    .grid-col-4 {
        grid-template-columns: repeat(4, 1fr);

        @include until($tablet-breakpoint) {
            grid-template-columns: repeat(2, 1fr);
        }
    }
}

.hide-empty:empty {
    display: none;
}

#filter-form,
#role-search-form {
    [data-query="input"] {
        [data-id] {
            cursor: pointer;
        }

        .toggle-item {
            color: $green;
            transform: rotate(45deg)
        }
    }

    [data-query="results"] .toggle-item {
        color: $red;
        cursor: pointer;
    }
}

// Flex
.inline-flex {
    display: inline-flex;
}

.flexcolumn-reversed-tablet {
    &>* {
        flex-basis: 50%;
    }

    @include until($tablet-breakpoint) {
        flex-direction: column-reverse;
    }
}

abbr[title] {
    text-decoration: none;
}

.flexrow.even>* {
    flex-basis: 50%;
}

// CK Editor
.form-group:not(.horizontal)>*~.ck {
    margin-top: $space-xs;
}

.ck-content {
    @extend textarea;
}

// Typography
.nobr {
    white-space: nowrap;
}

// Color
.table.striped tr:nth-child(1n).bg-green-lighter {
    background-color: $green-lighter;
}

.table.striped tr:nth-child(1n).bg-red-lighter {
    background-color: $red-lighter;
}

.table tr.highlighted {
    position: relative;

    &:after {
        content: '';
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        background-color: $black;
        opacity: 0.05;
    }

    a,
    form {
        z-index: 5;
    }
}

.legend-color {
    width: $space-base;
    border: 1px solid $grey-border;
}

button.as-link {
    padding: 0;
    border: none;
    color: $color-primary;
    background-color: transparent;

    &:hover {
        color: $color-primary;
        background-color: transparent;
    }
}

// Tags
.tag button {
    color: inherit;
    background-color: transparent;
    border: none;
    border-radius: 0;
    padding: 0;
    display: flex;

    &:hover {
        background-color: transparent;
    }
}

// Logo
.app-title {
    font-weight: $font-weight-bold;
    font-size: ms-font-size(2);

    a {
        color: $color-text-dark;
        text-decoration: none;
    }
}

// Table
table.fixed {
    table-layout: fixed;
}

// Copy to clipboard
[data-clipboard] {
    cursor: copy;
}

// Flex grid
.flex-basis-100 {
    flex-basis: 100%;
}

.flex-basis-40 {
    flex-basis: 40%;
}

.flex-basis-30 {
    flex-basis: 30%;
}

.flex-basis-20 {
    flex-basis: 20%;
}

// Buttons
.btn.is-text,
button.is-text,
input[type="submit"].is-text {
    border: none;
    background-color: transparent;

    &.primary {
        color: $color-primary;
    }

    &.error {
        color: $red;
    }

    &.success {
        color: $green;
    }

    &:hover {
        background-color: transparent;
        border: none;
    }
}


.button-list {
    position: relative;

    i[class*='icon'] {
        cursor: pointer;
    }

    &:hover .dropdown {
        display: flex;
    }

    button,
    .btn {
        padding: $space-sm $space-md;
        font-size: $body-font-size;
    }

    .dropdown {
        @extend .flexcolumn;

        // TODO: reuse mainnav dropdown
        position: absolute;
        display: none;
        flex-direction: column;
        border-radius: $dropdown-border-radius;
        z-index: 1;
        right: 0;
        top: 0;
        margin-top: 0;
        transform: translateX(100%);
        min-width: $dropdown-width;
        white-space: pre;
        background-color: $white;
        color: $color-text-dark;
        box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
        transition-duration: $dropdown-transition-duration;

        list-style-type: none;
        padding-left: 0;
        text-align: left;

        & li {
            margin-top: 0;
            transition: $transition-duration;
            display: flex;

            &:hover {
                background-color: $grey-light;
            }

            &>* {
                width: 100%;
            }
        }
    }
}

.session-close-checkboxes {
    @extend .flexrow;
    @extend .flex-gap;
    width: 5rem;
    align-items: flex-start;
    padding-top: $space-xs;

    &>* {
        flex-basis: 50%;
        display: flex;
        justify-content: center;
    }
}
